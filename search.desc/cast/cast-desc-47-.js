searchState.loadedDescShard("cast", 47, "Returns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTake bytecode from account. Code will be set to None.\nThe timestamp of the block in seconds since the UNIX epoch.\nReturns the address of the contract that will be called or …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet the topic list.\nGet the topic list, mutably. This gives access to the …\nGet a mutable reference to the topic list. This allows …\nThe destination of the transaction.\nReturns the <code>SpecId</code> for the given <code>u8</code>.\nRecover the authority and transform the signed …\nTries to create a new <code>FixedBytes</code> with cryptographically …\nTries to fill this <code>FixedBytes</code> with cryptographically …\nConfiguration of the transaction that is being executed.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnmark created flag.\nUnmark account as self destructed.\nUnmark the touch flag.\nValidate the block environment.\nValidate transaction data that is set inside ENV and …\nValidate transaction against state.\nThe value sent to <code>transact_to</code>.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nCreates a new <code>FixedBytes</code> with the last byte set to <code>x</code>.\nReturns account info without the code.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nSalt.\nHalting will spend all the gas, and will be equal to …\nAn Ethereum address, 20 bytes in length.\nStack-allocated buffer for efficiently computing address …\nError type for address checksum validation.\n16-byte fixed byte-array type.\n20-byte fixed byte-array type.\n32-byte fixed byte-array type.\n64-byte fixed byte-array type.\n8-byte fixed byte-array type.\nThe size of this integer type in bits.\nNumber of bits.\nNumber of bits to set per input in Ethereum bloom filter.\nSize of the bloom filter in bits\nSize of the bloom filter in bytes.\nThe size of this integer type in bytes. Note that some …\nThe size of this integer type in bytes. Note that some …\nThe error type that is returned when conversion to or from …\nA block hash.\nA block number.\nA block timestamp.\nEthereum 256 byte bloom filter.\nInput to the <code>Bloom::accrue</code> method.\nWrapper type around <code>bytes::Bytes</code> to support “0x” …\nA transaction that calls a contract or transfer.\nChain identifier type (introduced in EIP-155).\nA transaction that creates a contract.\nExplicit V value. May be EIP-155 modified.\nA byte array of fixed length (<code>[u8; N]</code>).\nError converting from bytes.\nError converting hex to bytes.\nAn Ethereum ABI function pointer, 24 bytes in length.\nAlready hashed input.\nError while decoding hex.\n128-bit signed integer type, consisting of 2, 64-bit limbs.\n16-bit signed integer type, consisting of 1, 64-bit limbs.\n160-bit signed integer type, consisting of 3, 64-bit limbs.\n256-bit signed integer type, consisting of 4, 64-bit limbs.\n32-bit signed integer type, consisting of 1, 64-bit limbs.\n64-bit signed integer type, consisting of 1, 64-bit limbs.\n8-bit signed integer type, consisting of 1, 64-bit limbs.\nError that occurs when the number is too large or too …\nTrait for an object that can be converted into a log data …\nInvalid ERC-55 checksum.\nInvalid parity.\nk256 error\nSimple <code>Keccak-256</code> hasher.\nThe size of this integer type in 64-bit limbs.\nA log consists of an address, and some log data.\nAn Ethereum event log object.\nBit mask for the last limb.\nThe largest value that can be represented by this integer …\nThe maximum value.\nThe smallest value that can be represented by this integer …\nThe minimum value.\nMinus one (multiplicative inverse) of this type.\nLess than zero.\nNon-EIP155. 27 or 28.\nOne (multiplicative identity) of this type.\nThe parity of the signature, stored as either a V value …\nParity flag. True for odd.\nThe error type that is returned when parsing a signed …\nGreater than or equal to zero.\nRaw input to be hashed.\nError that occurs when an invalid digit is encountered …\nSealeable objects.\nA consensus hashable item, with its memoized hash.\nSolidity contract functions are addressed using the first …\nEnum to represent the sign of a 256-bit signed integer.\nAn ECDSA Signature, consisting of V, R, and S.\nErrors in signature parsing or verification.\nSigned integer wrapping a <code>ruint::Uint</code>.\nAn account storage key.\nAn account storage value.\nA transaction hash is a keccak hash of an RLP encoded …\nThe index of transaction in a block.\nThe <code>to</code> field of a transaction. Either a target address, or …\nThe nonce of a transaction.\nThe sequence number of all existing transactions.\n<code>Uint</code> for <code>128</code> bits. Similar to <code>u128</code>.\n<code>Uint</code> for <code>16</code> bits. Similar to <code>u16</code>.\n<code>Uint</code> for <code>160</code> bits.\n<code>Uint</code> for <code>256</code> bits.\n<code>Uint</code> for <code>32</code> bits. Similar to <code>u32</code>.\n<code>Uint</code> for <code>512</code> bits.\n<code>Uint</code> for <code>64</code> bits. Similar to <code>u64</code>.\n<code>Uint</code> for <code>8</code> bits. Similar to <code>u8</code>.\nThe ring of numbers modulo $2^{\\mathtt{BITS}}$.\nArray of Zero bytes.\nThe value zero. This is the only value that exists in all …\nArray of Zero bytes.\nZero (additive identity) of this type.\nComputes the absolute value of <code>self</code>.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nAccrues the input into the bloom filter.\nAccrues the input into the bloom filter.\nIngests a log into the bloom filter.\nIngests a raw log into the bloom filter.\nCompute $\\mod{\\mathtt{self} + \\mathtt{rhs}}_…\nThe address which emitted this log.\nConverts a sequence of string literals containing …\nType aliases for common primitive types.\nDouble precision logarithm.\nDouble precision decimal logarithm.\nDouble precision binary logarithm.\nConstruct from double precision binary logarithm.\nArithmetic shift right by <code>rhs</code> bits.\nReturns references to the address and selector of the …\nReturns the sign character.\nConversion to i16 with overflow checking.\nConversion to i32 with overflow checking.\nConversion to i64 with overflow checking.\nConversion to i8 with overflow checking.\nConversion to isize with overflow checking.\nAccess the underlying store as a little-endian bytes.\nAccess the underlying store as a little-endian bytes with …\nAccess the underlying store as a little-endian slice of …\nAccess the underlying store as a mutable little-endian …\nView the array of limbs.\nView the array of limbs.\nAccess the array of limbs.\nReturns the checksum of a formatted address.\nReturns the checksum of a formatted address.\nConversion to u16 with overflow checking.\nConversion to u32 with overflow checking.\nConversion to u64 with overflow checking.\nConversion to u8 with overflow checking.\nConversion to usize with overflow checking.\nArithmetic shift left operation. Computes <code>self &lt;&lt; rhs</code>, …\nArithmetic shift right operation. Computes <code>self &gt;&gt; rhs</code> …\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nEnables the styling <code>Attribute</code> <code>value</code>.\nConverts a sequence of string literals containing …\nConverts a sequence of string literals containing …\nConverts a sequence of string literals containing …\nConverts a sequence of string literals containing …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns whether a specific bit is set.\nReturns whether a specific bit is set.\nComputes the bitwise AND of two <code>FixedBytes</code>.\nComputes the bitwise AND of two <code>FixedBytes</code>.\nLength of the number in bits ignoring leading zeros.\nComputes the bitwise OR of two <code>FixedBytes</code>.\nComputes the bitwise OR of two <code>FixedBytes</code>.\nComputes the bitwise XOR of two <code>FixedBytes</code>.\nComputes the bitwise XOR of two <code>FixedBytes</code>.\nReturn the least number of bits needed to represent the …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Blink</code>.\nConverts a sequence of string literals containing …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Bold</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Bright</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::BrightYellow</code>.\nReturns a specific byte. The byte at index <code>0</code> is the least …\nReturns a specific byte. The byte at index <code>0</code> is the least …\nLength of the number in bytes ignoring leading zeros.\nConverts a sequence of string literals containing …\nGet the chain_id of the V value, if any.\nChecked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…\nComputes <code>self + rhs</code>, returning <code>None</code> if overflow occurred.\nChecked integer addition. Computes <code>self + rhs</code>, returning …\nComputes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code>.\nChecked integer division. Computes <code>self / rhs</code>, returning …\nChecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …\nConstruct a new integer from little-endian a slice of …\nCreates a <code>Signed</code> from an absolute value and a negative …\nReturns the logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nComputes <code>self * rhs</code>, returning <code>None</code> if overflow occurred.\nChecked integer multiplication. Computes <code>self * rhs</code>, …\nComputes <code>-self</code>, returning <code>None</code> unless <code>self == 0</code>.\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nCalculates the smallest value greater than or equal to <code>self</code>…\nReturns the smallest power of two greater than or equal to …\nRaises self to the power of <code>exp</code>.\nChecked exponentiation. Computes <code>self.pow(exp)</code>, returning …\nComputes <code>self % rhs</code>, returning <code>None</code> if <code>rhs == 0</code>.\nChecked integer remainder. Computes <code>self % rhs</code>, returning …\nChecked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…\nChecked left shift by <code>rhs</code> bits.\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked right shift by <code>rhs</code> bits.\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nComputes <code>self - rhs</code>, returning <code>None</code> if overflow occurred.\nChecked integer subtraction. Computes <code>self - rhs</code>, …\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Clear</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Conceal</code>.\nCompile-time version of <code>contains</code>.\nCompile-time equality. NOT constant-time equality.\nCompile-time equality. NOT constant-time equality.\nCompile-time equality. NOT constant-time equality.\nEquality at compile-time.\nReturns true if this bloom filter is a possible superset …\nReturns true if this bloom filter is a possible superset …\nTrue if the bloom filter contains a log with given address …\nTrue if the bloom filter contains a log with given address …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Cyan</code>.\nReturns a reference to the underlying data.\nThe plain data.\nThe log data.\nReturns a mutable reference to the underlying data.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Dim</code>.\nComputes <code>self / rhs</code> rounding up.\nCalculates the quotient of Euclidean division of <code>self</code> by …\nComputes <code>self / rhs</code> and <code>self % rhs</code>.\nHash a message according to EIP-191 (version <code>0x01</code>).\nCreate <code>10**n</code> as this type.\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nReturns a styled value derived from <code>self</code> with the …\nPad and squeeze the state.\nPad and squeeze the state into <code>output</code>.\nPad and squeeze the state into <code>output</code>.\nPad and squeeze the state into <code>output</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Fixed</code>.\nConverts a sequence of string literals containing …\nCalculates the checksum of an address into the buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nReturns the argument unchanged.\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConstruct a new <code>Uint</code> from the value.\nConverts a fixed byte array into a fixed-width unsigned …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nConverts a fixed byte array into a fixed-width unsigned …\nReturns the argument unchanged.\nConverts a fixed byte array into a fixed-width unsigned …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an Ethereum function from an address and selector.\nConstructs the <code>Uint</code> from digits in the base <code>base</code> in …\nConstructs the <code>Signed</code> from digits in the base <code>base</code> in …\nConstructs the <code>Uint</code> from digits in the base <code>base</code> in …\nConverts a big-endian byte array of size exactly …\nConverts a big-endian byte array of size exactly …\nCreates a new integer from a big endian slice of bytes.\nConvert from a decimal string.\nConvert from a hex string.\nConverts a little-endian byte array of size exactly …\nConvert from an array in LE format\nCreates a new integer from a little endian slice of bytes.\nConstruct a new integer from little-endian a array of …\nConstruct a new integer from little-endian a array of …\nConstruct a new integer from little-endian a slice of …\nCoerces an unsigned integer into a signed one. If the …\nCreate a new byte array from the given slice <code>src</code>.\nCreate a new byte array from the given slice <code>src</code>.\nParse a string into a <code>Uint</code>.\nCreates an Ethereum function from an EVM word’s lower 24 …\nCompute the greatest common divisor of two <code>Uint</code>s.\n⚠️ Compute the greatest common divisor and the Bézout …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Green</code>.\nCalculate the seal hash, this may be slow.\nMacro for converting sequence of string literals …\nGet the inner item.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner bytes array.\nReturns the inner bytes array.\nConsume the input, converting it to the hash.\nReturns the backing buffer.\nUnseal the inner item, discarding the hash.\nConvert to a array of limbs.\nConvert to a array of limbs.\nConsume and convert into a <code>LogData</code> object.\nDecompose into parts.\nReturns the signed integer as a unsigned integer. If the …\nSplits a Signed into its absolute value and negative flag.\nRight-pads the function to 32 bytes (EVM word size).\nCompute $\\mod{\\mathtt{self}^{-1}}_{\\mathtt{modulus}}$.\nComputes the inverse modulo $2^{\\mathtt{BITS}}$ of <code>self</code>, …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Invert</code>.\nInverts the parity.\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns whether the sign is negative.\nDetermines if the integer is odd.\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns whether the sign is positive.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns true if the value is zero.\nReturns <code>true</code> if <code>self</code> is zero and <code>false</code> if the number is …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Italic</code>.\nSimple interface to the <code>Keccak-256</code> hash function.\nCompute the least common multiple of two <code>Uint</code>s or <code>None</code> if …\nReturns the number of leading ones in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nCreate a new byte array from the given slice <code>src</code>, …\nCreate a new byte array from the given slice <code>src</code>, …\nReturns the size of this array in bytes.\nReturns the size of this array in bytes.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Linger</code>.\nReturns the logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nLow word.\nSpecialised Bloom filter that sets three bits out of 2048, …\n<code>m3_2048</code> but with a pre-hashed input.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Mask</code>.\nReturns the most significant 64 bits of the number and the …\nCompute $\\mod{\\mathtt{self} ⋅ \\mathtt{rhs}}_…\nMontgomery multiplication.\nCreates a new buffer.\nWraps the given byte array in this type.\nWraps the given byte array in this type.\nCreates a new <code>Keccak256</code> hasher.\nInstantiate without performing the hash. This should be …\nCalculates the smallest value greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Black</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Blue</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::OnBright</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlack</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightBlue</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightCyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightGreen</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightMagenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightRed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightWhite</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::BrightYellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Cyan</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Fixed</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Green</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Magenta</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>bg()</code> set to <code>Color::Yellow</code>.\nComputes the absolute value of <code>self</code>.\nCalculates $\\mod{\\mathtt{self} + \\mathtt{rhs}}_{2^{BITS}}$.\nCalculates <code>self</code> + <code>rhs</code>\nCalculates <code>self</code> / <code>rhs</code>\nCalculates the quotient of Euclidean division …\nConstruct a new <code>Uint</code> from a little-endian slice of limbs. …\nCreates a <code>Signed</code> from a sign and an absolute value. …\nCalculates the multiplication of self and rhs.\nCalculates <code>self</code> * <code>rhs</code>\nCalculates $\\mod{-\\mathtt{self}}_{2^{BITS}}$.\nNegates self, overflowing if this is equal to the minimum …\nRaises self to the power of <code>exp</code> and if the result would …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nCalculates <code>self</code> % <code>rhs</code>\nOverflowing Euclidean remainder. Calculates …\nLeft shift by <code>rhs</code> bits with overflow detection.\nShifts self left by <code>rhs</code> bits.\nRight shift by <code>rhs</code> bits with underflow detection.\nShifts self right by <code>rhs</code> bits.\nCalculates $\\mod{\\mathtt{self} - \\mathtt{rhs}}_{2^{BITS}}$.\nCalculates <code>self</code> - <code>rhs</code>\nRaises self to the power of <code>exp</code>, wrapping around on …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nCompute $\\mod{\\mathtt{self}^{\\mathtt{rhs}}}_…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Primary</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nEnables the <code>yansi</code> <code>Quirk</code> <code>value</code>.\nInstantiates a new fixed byte array with cryptographically …\nInstantiates a new fixed byte array with cryptographically …\nCreates a new fixed byte array with the given random …\nCreates a new fixed byte array with the given random …\nFills this fixed byte array with cryptographically random …\nFills this fixed byte array with cryptographically random …\nFills this fixed byte array with the given random number …\nFills this fixed byte array with the given random number …\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::RapidBlink</code>.\nDetermines the recovery ID.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Red</code>.\n⚠️ Compute $\\mod{\\mathtt{self}}_{\\mathtt{modulus}}$.\nCalculates the least nonnegative remainder of …\nCreates a new byte array where all bytes are set to <code>byte</code>.\nCreates a new byte array where all bytes are set to <code>byte</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Resetting</code>.\nReverses the order of bits in the integer. The least …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Rgb</code>.\nCreate a new byte array from the given slice <code>src</code>, …\nCreate a new byte array from the given slice <code>src</code>, …\nComputes the floor of the <code>degree</code>-th root of the number.\nShifts the bits to the left by a specified amount, <code>rhs</code>, …\nShifts the bits to the right by a specified amount, <code>rhs</code>, …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nComputes <code>self + rhs</code>, saturating at the numeric bounds …\nSaturating integer addition. Computes <code>self + rhs</code>, …\nSaturating integer division. Computes <code>self / rhs</code>, …\nConstruct a new <code>Uint</code> from the value saturating the value …\nConstruct a new <code>Uint</code> from a little-endian slice of limbs. …\nComputes <code>self * rhs</code>, saturating at the numeric bounds …\nSaturating integer multiplication. Computes <code>self * rhs</code>, …\nSaturating negation. Computes <code>-self</code>, returning <code>MAX</code> if …\nRaises self to the power of <code>exp</code>, saturating on overflow.\nSaturating integer exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating left shift by <code>rhs</code> bits.\nComputes <code>self - rhs</code>, saturating at the numeric bounds …\nSaturating integer subtraction. Computes <code>self - rhs</code>, …\nExamples\nGet the hash.\nSeal the object by calculating the hash. This may be slow.\nInstantiate an unchecked seal. This should be used with …\nSets a specific bit to a value.\nReturns the sign of self.\nDecompose into parts. Alias for <code>Self::into_parts</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Strike</code>.\nConverts an EIP-155 V value to a non-EIP-155 V value.\nPanics\nReturns the address and selector of the function.\nReturns an iterator over the base <code>base</code> digits of the …\nReturns an iterator over the base <code>base</code> digits of the …\nConverts the <code>Uint</code> to a big-endian byte array of size …\nConverts <code>self</code> to a big-endian byte array of size exactly …\nConverts the <code>Uint</code> to a big-endian byte vector with leading …\nConverts the <code>Uint</code> to a big-endian byte vector of size …\nConvert to a decimal string.\nApplies EIP-155.\nConvert to a hex string.\nConverts the <code>Uint</code> to a little-endian byte array of size …\nConverts <code>self</code> to a little-endian byte array of size exactly\nConverts the <code>Uint</code> to a little-endian byte vector with …\nConverts the <code>Uint</code> to a little-endian byte vector of size …\nConvert into a <code>LogData</code> object.\nConvert to a parity bool, dropping any V information.\nReturns the checksum of a formatted address.\nReturn the corresponding u64 V value.\nReturns the number of trailing ones in the binary …\nReturns the number of leading ones in the binary …\nReturns the number of trailing zeros in the binary …\nReturns the number of leading zeros in the binary …\nCreates a new integer from a big endian slice of bytes.\nCreates a new integer from a big endian slice of bytes.\nCreates a new integer from a little endian slice of bytes.\nCreates a new integer from a little endian slice of bytes.\nTries to create a new fixed byte array with …\nTries to create a new fixed byte array with …\nTries to fill this fixed byte array with cryptographically …\nTries to fill this fixed byte array with cryptographically …\nTries to create a <code>Vec</code> of <code>n</code> elements, each initialized to …\nCompute the two’s complement of this number.\nShortcut for <code>val.try_into().unwrap()</code>.\nShortcut for <code>self.try_into().unwrap()</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nReturns <code>self</code> with the <code>attr()</code> set to <code>Attribute::Underline</code>.\nUnseal the inner item, discarding the hash. Alias for …\nComputes the absolute value of <code>self</code> without any wrapping …\nAbsorbs additional input. Can be called multiple times.\nCommon Ethereum utilities.\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nConditionally enable styling based on whether the <code>Condition</code>…\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::White</code>.\nCalculates the complete product <code>self * rhs</code> without the …\nApplies EIP-155 with the given chain ID.\nCreates a new byte array with the last byte set to <code>x</code>.\nCreates a new byte array with the last byte set to <code>x</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nReturns <code>self</code> with the <code>quirk()</code> set to <code>Quirk::Wrap</code>.\nWrap a fixed-size byte array in a newtype, delegating all …\nWrapping absolute value. Computes <code>self.abs()</code>, wrapping …\nComputes <code>self + rhs</code>, wrapping around at the boundary of …\nWrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …\nComputes <code>self / rhs</code> rounding down.\nWrapping (modular) division. Computes <code>self / rhs</code>, wrapping …\nWrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>,\nConstruct a new <code>Uint</code> from the value saturating the value …\nConstruct a new <code>Uint</code> from a little-endian slice of limbs. …\nComputes <code>self * rhs</code>, wrapping around at the boundary of …\nWrapping (modular) multiplication. Computes <code>self * rhs</code>, …\nComputes <code>-self</code>, wrapping around at the boundary of the …\nWrapping (modular) negation. Computes <code>-self</code>, wrapping …\nRaises self to the power of <code>exp</code>, wrapping around on …\nRaises self to the power of <code>exp</code>, wrapping around at the …\nComputes <code>self % rhs</code>.\nWrapping (modular) remainder. Computes <code>self % rhs</code>, …\nWrapping Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…\nLeft shift by <code>rhs</code> bits.\nWrapping shift left. Computes <code>self &lt;&lt; rhs</code>, returning 0 if …\nRight shift by <code>rhs</code> bits.\nWrapping shift right. Computes <code>self &gt;&gt; rhs</code>, returning 0 if …\nComputes <code>self - rhs</code>, wrapping around at the boundary of …\nWrapping (modular) subtraction. Computes <code>self - rhs</code>, …\nExamples\nReturn the y-parity as a boolean.\nReturn the y-parity as 0 or 1\nReturn the y-parity byte as 27 or 28, in the case of a …\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\nReturns <code>self</code> with the <code>fg()</code> set to <code>Color::Yellow</code>.\n128-byte fixed byte-array type.\n16-byte fixed byte-array type.\n2-byte fixed byte-array type.\n24-byte fixed byte-array type.\n256-byte fixed byte-array type.\n28-byte fixed byte-array type.\n32-byte fixed byte-array type.\n4-byte fixed byte-array type.\n64-byte fixed byte-array type.\n8-byte fixed byte-array type.\n1-byte fixed byte-array type.\n12-byte fixed byte-array type.\nA block hash.\nA block number.\nA block timestamp.\nChain identifier type (introduced in EIP-155).\nThe 0-bit signed integer type, capable of representing 0.\nThe 1-bit signed integer type, capable of representing 0 …\n128-bit signed integer type, consisting of 2, 64-bit limbs.\n16-bit signed integer type, consisting of 1, 64-bit limbs.\n160-bit signed integer type, consisting of 3, 64-bit limbs.\n192-bit signed integer type, consisting of 3, 64-bit limbs.\n256-bit signed integer type, consisting of 4, 64-bit limbs.\n32-bit signed integer type, consisting of 1, 64-bit limbs.\n512-bit signed integer type, consisting of 8, 64-bit limbs.\n64-bit signed integer type, consisting of 1, 64-bit limbs.")